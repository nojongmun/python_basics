import numpy as np

# 배열의 인덱싱
a = np.array([0,1,2,3,4])
print(a[2])
print(a[-1])  # 맨 마지막을 표현할때는 -1
print(a[-2])

# 다차원 배열 에서는 콤마를 이용해서 접근
# 콤마를 이용해서 구분된 차원을 축(axis)이라고 표현
# 그래프의 x축, y축 과 같은 개념

b = np.array([[0,1,2],[3,4,5]])
print(b[0])      # 0행 전체
print(b[0,0])
print(b[-1,-1])  # 마지막 행의 마지막열

print('----------------------------------')
# 배열 슬라이싱 (특정한 영역 추출)
c = np.array([[0,1,2,3], [4,5,6,7]])
print(c)
print(c[0])
print(c[0 , :])  # c의 0번째 행의 모든 열  => 0 번째 행 전체
print(c[: , 1])  # 1번째 열
print(c[1 , 1:]) # 1번째 행에서 1번째 열 부터 끝까지
print(c[:1,:2])  # 1번째 행 앞 부터 2번째 열 앞 까지 ( 결과를 2차원으로 배열로 나옴)

print('----------------------------------')
'''
 문제  0~14의 값을 이용해서 3*5 numpy 행렬 을 만들고 
1. 행렬에서 7을 인덱싱 하세요 
2. 행렬에서 14를 인덱싱 하세요
3. 행렬에서 배열 [1,2]를 슬라이싱 하세요
4. 행렬에서 배열 [[6],[11]]를 슬라이싱 하세요
5. 행렬에서 배열 [[8,9],[13,14]]를 슬라이이싱 하세요

'''
x = np.array([[0,1,2,3,4],[5,6,7,8,9],[10,11,12,13,14]])
print(x[1, 2])     # 7
print(x[-1, -1])   # 14
print(x[0, 1:3])   # [1,2]
print(x[1:, 1:2])  # [[6]
                   #  11]]
print(x[1:, 3:])   # [[ 8  9]
                   #  [13 14]]
print(x[1:3, 2:4]) # [[ 7  8]
                   #   [12 13]]










